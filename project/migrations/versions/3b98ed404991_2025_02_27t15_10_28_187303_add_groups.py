"""2025-02-27T15:10:28.187303_add_groups

Revision ID: 3b98ed404991
Revises: 08f2636195ed
Create Date: 2025-02-27 15:10:28.403302

"""

from typing import Sequence, Union

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

from database.config import DB_CONFIG
from services.personality.models import UserORM, GroupORM, BaseGroupsEnum

# revision identifiers, used by Alembic.
revision: str = "3b98ed404991"
down_revision: Union[str, None] = "a27bcf59c000"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    engine = create_engine(DB_CONFIG.url)
    session_class = sessionmaker(engine)
    with session_class() as session:
        for group_data in BaseGroupsEnum:
            group = GroupORM(name=group_data.value[0], description=group_data.value[-1])
            session.add(group)
            session.commit()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    engine = create_engine(DB_CONFIG.url)
    session_class = sessionmaker(engine)
    with session_class() as session:
        session.query(GroupORM).filter(GroupORM.name.in_([item.value[0] for item in BaseGroupsEnum])).delete(
            synchronize_session="fetch"
        )
        session.commit()
