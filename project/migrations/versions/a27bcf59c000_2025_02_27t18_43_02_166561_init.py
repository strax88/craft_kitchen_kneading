"""2025-02-27T18:43:02.166561_init

Revision ID: a27bcf59c000
Revises: 
Create Date: 2025-02-27 18:43:02.422561

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from database.model import Model


# revision identifiers, used by Alembic.
revision: str = "a27bcf59c000"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "health_tasks",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "personality_group",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "personality_role",
        sa.Column("name", sa.Enum("READ", "CREATE", "UPDATE", "DELETE", "ROOT", name="rolesenum"), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "personality_user",
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("telegram", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("surname", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("patronymic", sa.String(), nullable=True),
        sa.Column("birthday", sa.Date(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("phone"),
        sa.UniqueConstraint("telegram"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "personality_user_group_role",
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("group_id", sa.UUID(), nullable=True),
        sa.Column("role_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["group_id"], ["personality_group.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["role_id"], ["personality_role.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["personality_user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "group_id", "role_id", name="unique_personality_user_group_role"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("personality_user_group_role")
    op.drop_table("personality_user")
    op.drop_table("personality_role")
    op.drop_table("personality_group")
    op.drop_table("health_tasks")
    # ### end Alembic commands ###
